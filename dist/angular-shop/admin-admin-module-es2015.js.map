{"version":3,"sources":["./src/app/admin/add-page/add-page.component.html","./src/app/admin/dashboard-page/dashboard-page.component.html","./src/app/admin/edit-page/edit-page.component.html","./src/app/admin/login-page/login-page.component.html","./src/app/admin/orders/orders.component.html","./src/app/admin/shared/admin-layout/admin-layout.component.html","./src/app/admin/add-page/add-page.component.scss","./src/app/admin/add-page/add-page.component.ts","./src/app/admin/admin.module.ts","./src/app/admin/dashboard-page/dashboard-page.component.scss","./src/app/admin/dashboard-page/dashboard-page.component.ts","./src/app/admin/edit-page/edit-page.component.scss","./src/app/admin/edit-page/edit-page.component.ts","./src/app/admin/login-page/login-page.component.scss","./src/app/admin/login-page/login-page.component.ts","./src/app/admin/orders/orders.component.scss","./src/app/admin/orders/orders.component.ts","./src/app/admin/shared/admin-layout/admin-layout.component.scss","./src/app/admin/shared/admin-layout/admin-layout.component.ts","./src/app/shared/auth.guard.ts","./src/app/shared/search.pipe.ts"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit()\\\">\\r\\n\\r\\n\\r\\n    <h2 class=\\\"text-center\\\">Add new Product </h2>\\r\\n\\r\\n    <div class=\\\"form-control\\\">\\r\\n        <label for=\\\"type\\\">Type</label>\\r\\n        <select id=\\\"type\\\" formControlName=\\\"type\\\">\\r\\n            <option value=\\\"Phone\\\">Phone</option>\\r\\n            <option value=\\\"Tablet\\\">Tablet</option>\\r\\n            <option value=\\\"Laptop\\\">Laptop</option>\\r\\n\\r\\n        </select>\\r\\n        <div *ngIf=\\\"form.get('type').touched && form.get('type').invalid\\\" class=\\\"validation\\\">\\r\\n            <small *ngIf=\\\"form.get('type').errors.required\\\">Выберите тип продукта</small>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-control\\\">\\r\\n        <label for=\\\"title\\\">Name</label>\\r\\n        <input type=\\\"text\\\" id=\\\"title\\\" formControlName=\\\"title\\\">\\r\\n        <div *ngIf=\\\"form.get('title').touched && form.get('title').invalid\\\" class=\\\"validation\\\">\\r\\n            <small *ngIf=\\\"form.get('title').errors.required\\\">Введите название продукта</small>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-control\\\">\\r\\n        <label for=\\\"photo\\\">Photo</label>\\r\\n        <quill-editor id=\\\"photo\\\" formControlName=\\\"photo\\\"></quill-editor>\\r\\n        <div *ngIf=\\\"form.get('photo').touched && form.get('photo').invalid\\\" class=\\\"validation\\\">\\r\\n            <small *ngIf=\\\"form.get('photo').errors.required\\\">Выберите фото продукта</small>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-control\\\">\\r\\n        <label for=\\\"info\\\">Information</label>\\r\\n        <quill-editor id=\\\"info\\\" formControlName=\\\"info\\\"></quill-editor>\\r\\n        <div *ngIf=\\\"form.get('info').touched && form.get('info').invalid\\\" class=\\\"validation\\\">\\r\\n            <small *ngIf=\\\"form.get('info').errors.required\\\">Введите информацию о продукте</small>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-control\\\">\\r\\n        <label for=\\\"price\\\">Price</label>\\r\\n        <input type=\\\"text\\\" id=\\\"price\\\" formControlName=\\\"price\\\">\\r\\n        <div *ngIf=\\\"form.get('price').touched && form.get('price').invalid\\\" class=\\\"validation\\\">\\r\\n            <small *ngIf=\\\"form.get('price').errors.required\\\">Укажите цену продукта(₽)</small>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"submitted || form.invalid\\\">Отослать</button>\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div *ngIf=\\\"products; else loading\\\">\\n    <h2 class=\\\"text-center\\\">Dashboard of products</h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <input type=\\\"text\\\" placeholder=\\\"Find a product\\\" [(ngModel)]=\\\"productFind\\\">\\n    </div>\\n    <table>\\n        <thead>\\n            <tr>\\n                <th>ID</th>\\n                <th>Name</th>\\n                <th>Price</th>\\n                <th>Date of creation</th>\\n                <th>Open</th>\\n                <th>Delete</th>\\n            </tr>\\n        </thead>\\n\\n        <tbody>\\n            <tr *ngFor=\\\"let product of products | search: productFind; let idx = index\\\">\\n                <td>{{ idx + 1}}</td>\\n                <td>{{ product.title }}</td>\\n                <td>{{ product.price }}₽</td>\\n                <td>{{ product.date | date: 'short'}}</td>\\n                <td>\\n                    <button class=\\\"btn btn-dark\\\" [routerLink]=\\\"['/admin', 'product', product.id, 'edit']\\\">Open</button>\\n\\n                </td>\\n                <td>\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"delete(product.id)\\\">Delete</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\\n<ng-template #loading>\\n    <div class=\\\"lds-spinner\\\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\\n</ng-template>\\n\"","module.exports = \"\\n<div *ngIf=\\\"form; else loading\\\">\\n\\n<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit($event)\\\">\\n\\n\\n    <h2 class=\\\"text-center\\\">Edit Product </h2>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"type\\\">Type</label>\\n        <select id=\\\"type\\\" formControlName=\\\"type\\\">\\n            <option value=\\\"Phone\\\">Phone</option>\\n            <option value=\\\"Tablet\\\">Tablet</option>\\n            <option value=\\\"Laptop\\\">Laptop</option>\\n\\n        </select>\\n        <div *ngIf=\\\"form.get('type').touched && form.get('type').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('type').errors.required\\\">Выберите тип продукта</small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"title\\\">Name</label>\\n        <input type=\\\"text\\\" id=\\\"title\\\" formControlName=\\\"title\\\">\\n        <div *ngIf=\\\"form.get('title').touched && form.get('title').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('title').errors.required\\\">Введите название продукта</small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"photo\\\">Photo</label>\\n        <quill-editor id=\\\"photo\\\" formControlName=\\\"photo\\\"></quill-editor>\\n        <div *ngIf=\\\"form.get('photo').touched && form.get('photo').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('photo').errors.required\\\">Выберите фото продукта</small>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"info\\\">Information</label>\\n        <quill-editor id=\\\"info\\\" formControlName=\\\"info\\\"></quill-editor>\\n        <div *ngIf=\\\"form.get('info').touched && form.get('info').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('info').errors.required\\\">Введите информацию о продукте</small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"price\\\">Price</label>\\n        <input type=\\\"text\\\" id=\\\"price\\\" formControlName=\\\"price\\\">\\n        <div *ngIf=\\\"form.get('price').touched && form.get('price').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('price').errors.required\\\">Укажите цену продукта (₽)</small>\\n        </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"submitted || form.invalid\\\">Изменить</button>\\n</form>\\n\\n</div>\\n\\n<ng-template #loading>\\n    <p>loading...</p>\\n</ng-template>\\n\\n\"","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit($event)\\\">\\n    <h2 class=\\\"text-center\\\">Login as Administrator</h2>\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\">\\n        <div *ngIf=\\\"form.get('email').touched && form.get('email').invalid\\\" class=\\\"validation\\\">\\n            <small *ngIf=\\\"form.get('email').errors.email\\\">Введите корректную почту</small>\\n            <small *ngIf=\\\"form.get('email').errors.required\\\">Поле e-mail обязательное</small>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-control\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\">\\n        <div *ngIf=\\\"form.get('password').touched && form.get('password').invalid\\\" class=\\\"validation\\\" >\\n            <small *ngIf=\\\"form.get('password').errors.required\\\">Поле пароль обязательно для заполнения</small>\\n            <small *ngIf=\\\"form.get('password').errors.minlength\\\">\\n                Пароль должен иметь не менее {{ form.get('password').errors.minlength.requiredLength }} символов\\n                Введено {{ form.get('password').errors.minlength.actualLength }} символов\\n            </small>\\n        </div>\\n    </div>\\n\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block\\\" [disabled]=\\\"submitted || form.invalid\\\">Войти</button>\\n</form>\\n\\n\"","module.exports = \"<div *ngIf=\\\"orders; else loading\\\">\\r\\n    <h2 class=\\\"text-center\\\">Dashboard of orders</h2>\\r\\n\\r\\n    <div class=\\\"form-control\\\">\\r\\n        <input type=\\\"text\\\" placeholder=\\\"Find an order\\\" [(ngModel)]=\\\"orderFind\\\">\\r\\n    </div>\\r\\n    <table>\\r\\n        <thead>\\r\\n        <tr>\\r\\n            <th>Number</th>\\r\\n            <th>Date</th>\\r\\n            <th>Phone</th>\\r\\n            <th>Name</th>\\r\\n            <th>Address</th>\\r\\n            <th>Products</th>\\r\\n            <th>Price</th>\\r\\n            <th>Status</th>\\r\\n        </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n        <tr *ngFor=\\\"let order of orders | search: orderFind; let idx = index\\\">\\r\\n            <td>{{idx + 1}}</td>\\r\\n            <td>{{ order.date | date: 'medium'}}</td>\\r\\n            <td>{{ order.phone }}</td>\\r\\n            <td>{{ order.name }}</td>\\r\\n            <td>{{ order.address }}</td>\\r\\n            <td>\\r\\n                <div *ngFor=\\\"let prod of order.order\\\">\\r\\n                    {{prod.title}}\\r\\n                </div>\\r\\n            </td>\\r\\n            <td>\\r\\n                <div>{{ order.price }}₽</div>\\r\\n                <div>{{ order.payment}}</div>\\r\\n            </td>\\r\\n            <td>\\r\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"delete(order.id)\\\">Completed</button>\\r\\n            </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<ng-template #loading>\\r\\n    <div class=\\\"lds-spinner\\\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\\r\\n</ng-template>\\r\\n\"","module.exports = \"<nav class=\\\"navbar bg-danger\\\">\\n    <h1>\\n        <a routerLink=\\\"/\\\">Admin Panel Moon-Online Shop</a>\\n    </h1>\\n\\n    <ul *ngIf=\\\"authService.isAuthenticated(); else notAuth\\\">\\n        <li routerLinkActive=\\\"active\\\">\\n            <a routerLink=\\\"/admin/dashboard\\\">Dashboard</a>\\n        </li>\\n\\n        <li routerLinkActive=\\\"active\\\">\\n            <a routerLink=\\\"/admin/orders\\\">Orders</a>\\n        </li>\\n\\n        <li routerLinkActive=\\\"active\\\">\\n            <a routerLink=\\\"/admin/add\\\">Add Product</a>\\n        </li>\\n\\n        <li routerLinkActive=\\\"active\\\">\\n            <a (click)=\\\"logout($event)\\\">Logout</a>\\n        </li>\\n    </ul>\\n\\n    <ng-template #notAuth>\\n        <ul>\\n            <li routerLinkActive=\\\"active\\\">\\n                <a routerLink=\\\"/admin/login\\\">Login</a>\\n            </li>\\n        </ul>\\n    </ng-template>\\n\\n</nav>\\n\\n<div class=\\\"container\\\">\\n\\n    <router-outlet></router-outlet>\\n\\n</div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkZC1wYWdlL2FkZC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ProductService} from \"../../shared/product.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-add-page',\n  templateUrl: './add-page.component.html',\n  styleUrls: ['./add-page.component.scss']\n})\nexport class AddPageComponent implements OnInit {\n\n  form: FormGroup;\n  submitted = false;\n\n  constructor(private productService: ProductService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      type: new FormControl(null,[Validators.required]),\n      title: new FormControl(null,[Validators.required]),\n      photo: new FormControl(null,[Validators.required]),\n      info: new FormControl(null,[Validators.required]),\n      price: new FormControl(null,[Validators.required]),\n    });\n  }\n\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n\n    const product = {\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info: this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    };\n    this.productService.create(product).subscribe(res => {\n      console.log(res);\n      this.form.reset();\n      this.submitted = false;\n      this.router.navigate(['/admin', 'dashboard']);\n    });\n  }\n\n\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AdminLayoutComponent} from './shared/admin-layout/admin-layout.component';\r\nimport {LoginPageComponent} from './login-page/login-page.component';\r\nimport {EditPageComponent} from './edit-page/edit-page.component';\r\nimport {OrdersComponent} from './orders/orders.component';\r\nimport {DashboardPageComponent} from './dashboard-page/dashboard-page.component';\r\nimport {AddPageComponent} from './add-page/add-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {AuthGuard} from \"../shared/auth.guard\";\r\nimport {QuillModule} from \"ngx-quill\";\r\nimport {SearchPipe} from \"../shared/search.pipe\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AdminLayoutComponent,\r\n        LoginPageComponent,\r\n        EditPageComponent,\r\n        OrdersComponent,\r\n        DashboardPageComponent,\r\n        AddPageComponent,\r\n        SearchPipe\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        QuillModule.forRoot(),\r\n        RouterModule.forChild([\r\n            {\r\n                path: '', component: AdminLayoutComponent, children: [\r\n                    {path: '', redirectTo: '/admin/login', pathMatch: 'full'},\r\n                    {path: 'login', component: LoginPageComponent},\r\n                    {path: 'product/:id/edit', component: EditPageComponent, canActivate: [AuthGuard]},\r\n                    {path: 'orders', component: OrdersComponent, canActivate: [AuthGuard]},\r\n                    {path: 'dashboard', component: DashboardPageComponent, canActivate: [AuthGuard]},\r\n                    {path: 'add', component: AddPageComponent, canActivate: [AuthGuard]}\r\n                ]\r\n            }\r\n        ]),\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    exports: []\r\n})\r\n\r\nexport class AdminModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC1wYWdlL2Rhc2hib2FyZC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ProductService} from \"../../shared/product.service\";\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-dashboard-page',\n  templateUrl: './dashboard-page.component.html',\n  styleUrls: ['./dashboard-page.component.scss']\n})\nexport class DashboardPageComponent implements OnInit,OnDestroy {\n\n  constructor(private productService: ProductService) { }\n\n  products = [];\n  pSub: Subscription;\n  rSub: Subscription;\n  productFind: string;\n\n  ngOnInit() {\n    this.pSub = this.productService.getAll().subscribe(products => {\n      this.products = products;\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.pSub) {\n      this.pSub.unsubscribe();\n    }\n    if (this.rSub) {\n      this.rSub.unsubscribe();\n    }\n  }\n  delete(id) {\n    this.rSub = this.productService.remove(id).subscribe(() => {\n      this.products = this.products.filter(prod => prod.id !== id);\n    });\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2VkaXQtcGFnZS9lZGl0LXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {ProductService} from '../../shared/product.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {switchMap} from 'rxjs/operators';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Product} from '../../shared/interfaces';\n\n@Component({\n  selector: 'app-edit-page',\n  templateUrl: './edit-page.component.html',\n  styleUrls: ['./edit-page.component.scss']\n})\nexport class EditPageComponent implements OnInit {\n\n  form: FormGroup;\n  product: Product;\n  submitted = false;\n\n  constructor(private productService: ProductService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    this.route.params.pipe(switchMap(params => {\n      return this.productService.getById(params['id']);\n    })).subscribe(product => {\n      this.product = product;\n      this.form = new FormGroup({\n        type: new FormControl(product.type, [Validators.required]),\n        title: new FormControl(product.title, [Validators.required]),\n        photo: new FormControl(product.photo, [Validators.required]),\n        info: new FormControl(product.info, [Validators.required]),\n        price: new FormControl(product.price, [Validators.required]),\n      });\n    });\n  }\n  submit(event) {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n\n    this.productService.update({\n      ...this.product,\n      type: this.form.value.type,\n      title: this.form.value.title,\n      photo: this.form.value.photo,\n      info: this.form.value.info,\n      price: this.form.value.price,\n      date: new Date()\n    }).subscribe(res => {\n      this.submitted = false;\n      this.router.navigate(['/admin', 'dashboard']);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2xvZ2luLXBhZ2UvbG9naW4tcGFnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from \"../../shared/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n  form: FormGroup;\n  submitted = false;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  submit(event) {\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitted = true;\n    event.preventDefault();\n    const user = {\n      email: this.form.value.email,\n      password: this.form.value.password,\n      returnSecureToken: true\n    };\n    this.authService.login(user).subscribe(res => {\n      this.form.reset();\n      this.router.navigate(['/admin', 'dashboard']);\n      this.submitted = false;\n    }, () => {\n      this.submitted = false;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL29yZGVycy9vcmRlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {OrderService} from \"../../shared/order.service\";\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit, OnDestroy {\n\n  constructor(private orderService: OrderService) { }\n\n  orders = [];\n  pSub: Subscription;\n  rSub: Subscription;\n  orderFind: string;\n\n  ngOnInit() {\n    this.pSub = this.orderService.getAll().subscribe(orders => {\n      this.orders = orders;\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.pSub) {\n      this.pSub.unsubscribe();\n    }\n    if (this.rSub) {\n      this.rSub.unsubscribe();\n    }\n  }\n  delete(id) {\n    this.rSub = this.orderService.remove(id).subscribe(() => {\n      this.orders = this.orders.filter(prod => prod.id !== id);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3NoYXJlZC9hZG1pbi1sYXlvdXQvYWRtaW4tbGF5b3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../../../shared/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  constructor(public authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout(event) {\n    event.preventDefault();\n    this.authService.logout();\n    this.router.navigate(['/admin', 'login']);\n  }\n}\n","import {Injectable} from \"@angular/core\";\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {\r\n    }\r\n    canActivate(\r\n        next: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot)\r\n        : Observable<boolean> | boolean  {\r\n        if (this.authService.isAuthenticated()) {\r\n            return true;\r\n        } else {\r\n            this.authService.logout();\r\n            this.router.navigate(['/admin', 'login']);\r\n        }\r\n    }\r\n}\r\n","import {Pipe, PipeTransform} from \"@angular/core\";\r\nimport {Product} from \"./interfaces\";\r\n\r\n\r\n@Pipe({\r\n    name: 'search'\r\n})\r\n\r\nexport class SearchPipe implements PipeTransform {\r\n    transform(products: Product[], prodName = ''): any {\r\n        if (!prodName.trim()) {\r\n            return products;\r\n        }\r\n\r\n\r\n        return products.filter(prod => {\r\n            return prod.title.toLowerCase().includes(prodName.toLowerCase());\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""}